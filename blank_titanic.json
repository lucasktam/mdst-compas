{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"YZJXs0mp3qAn","colab":{"base_uri":"https://localhost:8080/"},"outputId":"6db9c9b5-640b-471e-eace-7ec4bbcb7863"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","\n","from google.colab import drive\n","\n","drive.mount('/content/drive')\n","\n","titanic = pd.read_excel('/content/drive/My Drive/mdst collab/week 2/titanic3.xls')"]},{"cell_type":"markdown","source":["# PHASE 1: Exploring the Dataset"],"metadata":{"id":"3bSVNq7T6p_n"}},{"cell_type":"markdown","source":["1: Load the titanic dataset ('titanic3.xls') using pandas."],"metadata":{"id":"lumRVnSO33D6"}},{"cell_type":"code","source":["# Hint: Path of Dataset\n"],"metadata":{"id":"_J90Eq4p4w3t"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Features\n","\n","* survival - Survival (0 = No; 1 = Yes)\n","* class - Passenger Class (1 = 1st; 2 = 2nd; 3 = 3rd)\n","* name - Name\n","* sex - Sex\n","* age - Age\n","* sibsp - Number of Siblings/Spouses Aboard\n","* parch - Number of Parents/Children Aboard\n","* ticket - Ticket Number\n","* fare - Passenger Fare\n","* cabin - Cabin\n","* embarked - Port of Embarkation (C = Cherbourg; Q = Queenstown; S = Southampton)\n","* boat - Lifeboat (if survived)\n","* body - Body number (if did not survive and body was recovered)\n"],"metadata":{"id":"yZ_G7eY9aGbS"}},{"cell_type":"markdown","source":["2: Print out the dimensions, column names, and datatypes of this dataset! Then print out the head."],"metadata":{"id":"QY58B_YG4zfH"}},{"cell_type":"code","source":["# Dimensions\n","\n","# Columns\n","\n","# Datatypes\n","\n","# Head\n"],"metadata":{"id":"8YAw3-IC4zOg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["3: Use .describe() to find out some initial statistics. In this dataset, what percentage of people died on the Titanic? How many people does this correspond to? Then use .describe(include='O') to figure out some information about categorical data. Is there anything surprising?"],"metadata":{"id":"HEi-rAqR5Oi2"}},{"cell_type":"code","source":["# Describe\n","\n","# Answer the questions here!\n"],"metadata":{"id":"42OZ3jW15TNI"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["There are some null values. Which columns have null values?"],"metadata":{"id":"r2w9GPurM1iq"}},{"cell_type":"code","source":["# List columns here\n"],"metadata":{"id":"ZbB8o3XANUsU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["How many null values are in each null column and what is the percentage of null values per column?"],"metadata":{"id":"qiTN12Y_NKu3"}},{"cell_type":"code","source":["# Hint: Method that checks if a value is null and 'sum'thing that adds"],"metadata":{"id":"4mVsk6eaNU9I"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Clean the df by dropping the rows with null ages, and then fill the null values in fare with the mean fare."],"metadata":{"id":"gSJHbqtsNVLQ"}},{"cell_type":"code","source":["# Hint: Drop but null\n","\n","# Describe"],"metadata":{"id":"s8iYkMAaNw65"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Fill null here"],"metadata":{"id":"52nxzSRZOjkg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["4: Use .unique() on columns to figure out some unique values. Which columns does it make sense to do this on?"],"metadata":{"id":"ucmhNhyf5xzH"}},{"cell_type":"code","source":["# Fill this out\n","unique_cols = [...]\n","\n","for col in unique_cols:\n","  # Print col here\n","\n","  # Apply and print unique values here\n","\n","  # Print to see everything again"],"metadata":{"id":"evEfzRRl6CRx"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["5: Find the min and max siblings, family members, ticket price, and age."],"metadata":{"id":"69tNXelW7Sh3"}},{"cell_type":"code","source":[],"metadata":{"id":"Rtbl6F_v7Ggs"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["6: How many people are in each class?"],"metadata":{"id":"IqORaF_B7Yvx"}},{"cell_type":"code","source":["# Count values!\n"],"metadata":{"id":"ELd_yMVP7iO0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["7: Find the mean fare of each class."],"metadata":{"id":"PFaGEJMo7nui"}},{"cell_type":"code","source":["# df.groupby('category')['value']"],"metadata":{"id":"etp09_eB72gq"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["9: Using seaborn, graph the ticket prices with a histogram. Label axises and title."],"metadata":{"id":"78KvccrJX9eL"}},{"cell_type":"code","source":[],"metadata":{"id":"uOYvBpJ0Yu8v"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# PHASE 2: Feature Creation"],"metadata":{"id":"3OqTuWp7639R"}},{"cell_type":"markdown","source":["1: Let's start by removing the home destination column, body, cabin, and ticket columns."],"metadata":{"id":"AihZijGm8Bf1"}},{"cell_type":"code","source":[],"metadata":{"id":"NdUtsqW56_C6"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["2: Let's make a new column called 'family_size' that counts the amount of family members a passenger has in their family. Then move this column to the right of the parent and children column.\n","\n","(We're going to define number of family members in an individual's family as siblings + partner + parents + childs + 1 (for yourself). So if someone has a mom, dad, and a sibling, their family size is 4.)"],"metadata":{"id":"5aVfTfff8TQD"}},{"cell_type":"code","source":[],"metadata":{"id":"4hiXFeO-8hkl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Using seaborn, graph the family sizes of the dataset in a barplot. Label axises and title."],"metadata":{"id":"-8djE7IsPLqE"}},{"cell_type":"code","source":[],"metadata":{"id":"KqmBasVFPIjp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["3: Make a new column called 'family_group' that creates categories of how big a family is. 1-3 = small, 4-6 = medium, 7+ = large. Then print out the mean of each\n","\n","(hint: It's easiest if you use the .map() function)"],"metadata":{"id":"ecdRKknK9kpr"}},{"cell_type":"code","source":[],"metadata":{"id":"13nTan6X9lUe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["4: Make a new column called age_cat that separates the age into four categories. [0, 18), [18, 30), [30, 60), 60+. Let's label them with 'child', 'young_adult', 'adult', 'senior'. Then move this new column to the right of your age column."],"metadata":{"id":"O5ln06Iw88es"}},{"cell_type":"code","source":[],"metadata":{"id":"qIXmbYWJ9GaL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["5: The names in the dataset are in an interesting format. Create three additional columns that describe people's names. 'first' and 'last' describe their first and last names, while 'title' describes their title such as Mr., Ms., or Dr.\n","\n","(It's probably best practice to make this column using regex, but if you aren't familiar with it, you can accomplish this by chaining some .str.split()'s together.)\n","\n","How many doctors are on this ship? How many unique titles are there?"],"metadata":{"id":"z_AzAOlu9PFE"}},{"cell_type":"code","source":[],"metadata":{"id":"9Dkw2-hB-p38"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["How many families are there, assuming a family is 3+ members?"],"metadata":{"id":"JdbubPRmRnHm"}},{"cell_type":"code","source":[],"metadata":{"id":"M3hrsBCQRLvf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Clean the titles. Replace all professional/royalty title values with a single value, and put all variations of a non-royalty female title into the same title (Mrs, Ms, Mademoiselle, Miss). (Madame is a royalty title!)"],"metadata":{"id":"HYwTizP_RmZq"}},{"cell_type":"code","source":[],"metadata":{"id":"dk64Dr_XSAUC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Phase 3: Looking at survival"],"metadata":{"id":"wDrq9XaLAM5R"}},{"cell_type":"markdown","source":["1: Let's display some percentages. print() out:    \n","\n","Male: A%  \n","Female: B%  \n","1st class: X%  \n","2nd class: Y%  \n","3rd class: Z%  \n","  \n","where A, B, X, Y, Z, are the respective percentages. You can use fstrings to simplify this"],"metadata":{"id":"LjBud8xpAPRL"}},{"cell_type":"code","source":[],"metadata":{"id":"J_Dwju6MAOmd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["2: How about the percentage of people in each class who survived? Gender? Age category? Family size?"],"metadata":{"id":"jBikNSnpCXyV"}},{"cell_type":"code","source":[],"metadata":{"id":"319JxztHVduJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["3: What is the correlation with pclass and survival? What about age and survival? Ticket price and survival? Family size and survival?"],"metadata":{"id":"WIAZs6BSWOf6"}},{"cell_type":"code","source":[],"metadata":{"id":"i48dd-9DYwCl"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["How many professional/royalty people survived? What about for the non-professional/non-royalty people? What is the percentage of survival for these groups?"],"metadata":{"id":"EAWfH3YCT7Ex"}},{"cell_type":"code","source":[],"metadata":{"id":"FqVcggJlUCtV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["4: Finally, filter the rows and remove everyone who died. Run .describe(), and plot some information of your choice."],"metadata":{"id":"j1R5BOjtAYby"}},{"cell_type":"code","source":[],"metadata":{"id":"Vgg8A8IHaBE4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"Edr9p0oyUXhM"}}]}